{"version":3,"file":"index.js","sources":["../src/js/API.js","../src/js/hero_modals.js","../src/js/hero.js","../src/js/home.js","../src/js/card_creator.js","../src/js/library.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2Y2IxMWQ4ZGE0NTZlOGI5OTIxM2EyNDk4ODM4OGQyNSIsIm5iZiI6MTcyODcyMDEzMC44MDY0Niwic3ViIjoiNjcwYTJiNDEzYmI0NTU3YzY2OWFmYzM5Iiwic2NvcGVzIjpbImFwaV9yZWFkIl0sInZlcnNpb24iOjF9.Pgojbxf9JKo_J1qf6Qmglon5qZgkr9wpZ4I978dGQU8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = API_KEY;\n\n//pozyskanie wszystkich filmów - do wykorzystania przy populowania katalogu\n//time_window to string \"day\" albo \"week\"\nexport const getTrending = async (time_window = 'day') => {\n  const response = await axios.get(`/trending/movie/${time_window}`);\n  return response.data;\n};\n\n//pozyskiwanie nadchodzących\nexport const getUpcoming = async () => {\n  const response = await axios.get(`movie/upcoming`);\n  return response.data;\n};\n\n//wyszukiwanie filmów\n\n//przykładowe searchParams, do zmiany na input value jak już będzie przygotowana strona;\nconst searchParams = new URLSearchParams({\n  query: 'Deadpool',\n  primary_release_year: 2024,\n  page: 1,\n});\n\nexport const searchFilm = async () => {\n  const response = await axios.get(`/search/movie?${searchParams}`);\n  return response.data;\n};\n\n//pozyskiwanie szczegółów\nexport const getDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}`);\n  return response.data;\n};\n\n//trailer\nexport const getTrailer = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/videos`);\n  return response.data;\n};\n\n//gatunki\nconst getGenres = async () => {\n  try {\n    const response = await axios.get(`/genre/movie/list`);\n    const genres = response.data.genres;\n    return new Map(genres.map(genre => [genre.id, genre.name]));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const convertGenreIdsToNames = async genreIds => {\n  try {\n    const genreMap = await getGenres();\n    const genreNames = genreIds.map(id => genreMap.get(id) || 'Unknow genre');\n    return genreNames;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//kraje\nexport const getCountries = async () => {\n  const response = await axios.get(`/configuration/countries`);\n  return response.data;\n};\n\n//logowanie danych do konsoli\nexport const logData = async fn => {\n  try {\n    const data = await fn;\n    console.log(data);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","// Modal dla zwiastuna filmu \nexport const openTrailerModal = (trailerData) => {\n  const modalTrailer = document.getElementById('modal-trailer');\n  const trailer = trailerData.results.find(vid => vid.type === 'Trailer');\n\n  if (trailer) {\n    modalTrailer.innerHTML = `\n      <div class=\"modal-content\">\n        <span class=\"close-modal\">&times;</span>\n        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/${trailer.key}\" \n          frameborder=\"0\" allowfullscreen></iframe>\n      </div>\n    `;\n  } else {\n    modalTrailer.innerHTML = `\n      <div class=\"modal-content error-pop-up\">\n        <span class=\"close-modal\">&times;</span>\n        <img src=\"../images/oops-logo.png\" alt=\"camera icon with popcorn\" width=\"363\" height=\"318\"/>\n        <p>OOPS... We are very sorry! But we couldn’t find the trailer.</p>\n      </div>\n    `;\n  }\n\n  modalTrailer.style.display = 'block';\n\n  // Zamknięcie modala dla zwiastuna filmu przez ikonę zamknięcia\n  modalTrailer.querySelector('.close-modal').addEventListener('click', () => {\n    modalTrailer.style.display = 'none';\n  });\n\n  // Zamknięcie modala przez kliknięcie w tło modala\n  modalTrailer.addEventListener('click', (event) => {\n    if (event.target === modalTrailer) {\n      modalTrailer.style.display = 'none';\n    }\n  });\n};\n\n// Modal dla szczegółów filmu\nexport const openDetailsModal = (details) => {\n  const modalDetails = document.getElementById('modal-details');\n\n  const backgroundImage = details.backdrop_path\n    ? `https://image.tmdb.org/t/p/original/${details.backdrop_path}`\n    : `https://image.tmdb.org/t/p/original/${details.poster_path}`;\n\n  modalDetails.innerHTML = `\n    <div class=\"modal-content\" style=\"background-image: url('${backgroundImage}'); background-size: cover; background-position: center; padding: 20px; color: white;\">\n      <span class=\"close-modal\" style=\"cursor: pointer; font-size: 24px;\">&times;</span>\n      <h2>${details.title}</h2>\n      <p><strong>Vote / Votes:</strong> ${details.vote_average} / ${details.vote_count}</p>\n      <p><strong>Popularity:</strong> ${details.popularity}</p>\n      <p><strong>Genres:</strong> ${details.genres.map(genre => genre.name).join(', ')}</p>\n      <p><strong>Overview:</strong> ${details.overview}</p>\n      <button id=\"add-to-library\" class=\"add-to-library-btn\">Add to my library</button>\n    </div>\n  `;\n  modalDetails.style.display = 'block';\n\n  // Zamknięcie modala dla szczegółów filmu przez ikonę zamknięcia\n  modalDetails.querySelector('.close-modal').addEventListener('click', () => {\n    modalDetails.style.display = 'none';\n  });\n\n  // Zamknięcie modala przez kliknięcie w tło modala\n  modalDetails.addEventListener('click', (event) => {\n    if (event.target === modalDetails) {\n      modalDetails.style.display = 'none';\n    }\n  });\n};","import { getTrending, getDetails, getTrailer } from './API.js'; \nimport { openDetailsModal, openTrailerModal } from './hero_modals.js';\n\nconst heroElement = document.querySelector('.hero');\nconst defaultHeroContent = `\n  <div class=\"hero-content\">\n    <h1>Let’s Make Your Own Cinema</h1>\n    <p>Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers. Decorate your space, choose your films, and stock up on snacks for the full experience.</p>\n    <button id=\"get-started\">Get Started</button>\n  </div>\n`;\n\n// Funkcja pomocnicza tworzenia elementu gwiazdki\nconst createStarElement = (type) => {\n  const starElement = document.createElement('span');\n  starElement.classList.add(`${type}-star`);\n  \n  starElement.innerHTML = '&#9733;';\n  \n  if (type === 'empty') {\n    starElement.innerHTML = '&#9734;';\n  }\n\n  return starElement;\n};\n\n// Wyświetlanie gwiazdek jako rating\nconst displayStarRating = (rating) => {\n  console.log(`Rating dla filmu: ${rating}`);  // Sprawdzenie, czy rating jest zwracany\n\n  const starsContainer = document.createElement('div');\n  starsContainer.classList.add('star-rating');\n\n  const fullStars = Math.floor(rating / 2);\n  const halfStar = (rating % 2) >= 1 ? 1 : 0;\n  const emptyStars = 5 - fullStars - halfStar;\n\n  for (let i = 0; i < fullStars; i++) {\n    starsContainer.appendChild(createStarElement('full'));\n  }\n\n  if (halfStar) {\n    starsContainer.appendChild(createStarElement('half'));\n  }\n\n  for (let i = 0; i < emptyStars; i++) {\n    starsContainer.appendChild(createStarElement('empty'));\n  }\n\n  return starsContainer.outerHTML;\n};\n\n// Funkcja wyciągania filmu dnia\n\nconst renderMovieHero = async () => {\n  try {\n    const data = await getTrending();\n    const movies = data.results;\n\n    if (movies.length === 0) {\n      heroElement.innerHTML = defaultHeroContent;\n      document.getElementById('get-started').addEventListener('click', () => {\n        window.location.href = '/catalog';\n      });\n      return;\n    }\n\n    const movie = movies[Math.floor(Math.random() * movies.length)];\n    heroElement.style.backgroundImage = `url(https://image.tmdb.org/t/p/original/${movie.backdrop_path})`;\n\n    // Zamiana numerycznego ratingu na gwiazdki\n    heroElement.innerHTML = `\n      <div class=\"movie-info\">\n        <h2>${movie.title}</h2>\n        <p>Rating: ${displayStarRating(movie.vote_average)}</p>\n        <p>${movie.overview}</p>\n        <button id=\"watch-trailer\">Watch Trailer</button>\n        <button id=\"more-details\">More Details</button>\n      </div>\n    `;\n\n    document.getElementById('watch-trailer').addEventListener('click', async () => {\n      const trailerData = await getTrailer(movie.id);\n      openTrailerModal(trailerData);\n    });\n\n    document.getElementById('more-details').addEventListener('click', async () => {\n      const details = await getDetails(movie.id);\n      openDetailsModal(details);\n    });\n\n  }  catch (error) {\n    console.error('Error fetching trending movies:', error);\n\n    const desktopImage = '../images/hero-desktop.jpg';\n    const tabletImage = '../images/hero-tablet.jpg';\n    const mobileImage = '../images/hero-mobile.jpg';\n\n    // Sprawdzenie rozmiaru okna\n    if (window.innerWidth >= 1024) {\n      heroElement.style.backgroundImage = `url(${desktopImage})`;\n    } else if (window.innerWidth >= 768) {\n      heroElement.style.backgroundImage = `url(${tabletImage})`;\n    } else {\n      heroElement.style.backgroundImage = `url(${mobileImage})`;\n    }\n\n    heroElement.innerHTML = defaultHeroContent;\n  }\n};\n\nrenderMovieHero();","import { getTrending, getUpcoming, convertGenreIdsToNames } from './API.js';\nimport { openDetailsModal } from './hero_modals.js';\n\nconst renderStars = rating => {\n  const totalStars = 5;\n  const roundedRating = Math.round(rating * 2) / 2;\n\n  const fullStars = Math.floor(roundedRating);\n  const halfStar = roundedRating % 1 === 0.5 ? 1 : 0;\n  const emptyStars = totalStars - fullStars - halfStar;\n\n  let starHTML = '';\n\n  for (let i = 0; i < fullStars; i++) {\n    starHTML += `<svg class=\"icon\"><use xlink:href=\"#icon-star\"></use></svg>`;\n  }\n  if (halfStar) {\n    starHTML += `<svg class=\"icon\"><use xlink:href=\"#icon-star-half\"></use></svg>`;\n  }\n  for (let i = 0; i < emptyStars; i++) {\n    starHTML += `<svg class=\"icon\"><use xlink:href=\"#icon-star-empty\"></use></svg>`;\n  }\n\n  return starHTML;\n};\nconst renderTrendingMovies = async () => {\n  try {\n    const trendingData = await getTrending('week');\n    const trendingMovies = trendingData.results;\n\n    const trendingContainer = document.querySelector('#trending-container');\n\n    for (const movie of trendingMovies.slice(0, 3)) {\n      const genreNames = await convertGenreIdsToNames(movie.genre_ids);\n\n      const limitedGenreNames = genreNames.slice(0, 2);\n      const genreText = limitedGenreNames.join(', ');\n\n      const movieElement = document.createElement('div');\n      movieElement.classList.add('trending-card');\n      movieElement.setAttribute('data-movie-id', movie.id);\n\n      movieElement.innerHTML = `\n        <img src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"${\n        movie.title\n      }\">\n        <h3>${movie.title.toUpperCase()}</h3>\n        <p>${genreText} | ${new Date(\n        movie.release_date\n      ).getFullYear()} ${renderStars(movie.vote_average / 2)}</p>\n      `;\n\n      movieElement.addEventListener('click', async () => {\n        const movieDetails = {\n          ...movie,\n          genres: genreNames,\n        };\n        openDetailsModal(movieDetails);\n      });\n\n      trendingContainer.appendChild(movieElement);\n    }\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n  }\n};\n\n// Sprawdza, czy film jest w bibliotece\nconst isMovieInLibrary = movieId => {\n  const library = JSON.parse(localStorage.getItem('myLibrary')) || [];\n  return library.some(movie => movie.id === movieId);\n};\n\n// Dodaje film do biblioteki\nconst addMovieToLibrary = movie => {\n  const library = JSON.parse(localStorage.getItem('myLibrary')) || [];\n  library.push(movie);\n  localStorage.setItem('myLibrary', JSON.stringify(library));\n};\n\n// Usuwa film z biblioteki\nconst removeMovieFromLibrary = movieId => {\n  let library = JSON.parse(localStorage.getItem('myLibrary')) || [];\n  library = library.filter(movie => movie.id !== movieId);\n  localStorage.setItem('myLibrary', JSON.stringify(library));\n};\n\nconst handleLibraryToggle = (movie, button) => {\n  if (isMovieInLibrary(movie.id)) {\n    removeMovieFromLibrary(movie.id);\n    button.textContent = 'Add to my library';\n  } else {\n    addMovieToLibrary(movie);\n    button.textContent = 'Remove from my library';\n  }\n};\n\nconst renderUpcomingMovie = async () => {\n  try {\n    const upcomingData = await getUpcoming();\n    const upcomingMovies = upcomingData.results;\n    const movie = upcomingMovies[0];\n\n    const genreNames = await convertGenreIdsToNames(movie.genre_ids);\n    const genreText = genreNames.join(', ');\n\n    document.getElementById(\n      'upcoming-movie-poster'\n    ).src = `https://image.tmdb.org/t/p/w500${movie.backdrop_path}`;\n    document.getElementById('upcoming-movie-title').textContent = movie.title;\n    document.getElementById('upcoming-release-date').textContent =\n      movie.release_date;\n    document.getElementById(\n      'upcoming-vote'\n    ).textContent = `${movie.vote_average} / ${movie.vote_count}`;\n    document.getElementById('upcoming-popularity').textContent =\n      movie.popularity;\n    document.getElementById('upcoming-overview').textContent = movie.overview;\n    document.getElementById('upcoming-genre').textContent = genreText;\n\n    // Przycisk \"Add/Remove from library\"\n    const addLibraryButton = document.getElementById('add-library-button');\n    addLibraryButton.textContent = isMovieInLibrary(movie.id)\n      ? 'Remove from my library'\n      : 'Add to my library';\n\n    addLibraryButton.addEventListener('click', () =>\n      handleLibraryToggle(movie, addLibraryButton)\n    );\n  } catch (error) {\n    console.error('Error fetching upcoming movies:', error);\n    document.getElementById('upcoming-no-movies-message').style.display =\n      'block';\n  }\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  renderTrendingMovies();\n  renderUpcomingMovie();\n});\n","import { convertGenreIdsToNames } from './API.js';\n\nexport const element = (tag, props) =>\n  Object.assign(document.createElement(tag), props);\n\nexport const createElement = ({\n  poster_path,\n  title,\n  genre_ids,\n  release_date,\n}) => {\n  const card = element('li', { className: 'card' });\n\n  const poster = element('img', {\n    className: 'card-poster',\n    src: `https://image.tmdb.org/t/p/original/${poster_path}`,\n    width: 200,\n    height: 300,\n  });\n\n  const description = element('div', {\n    className: 'card-description',\n  });\n\n  const filmTitle = element('p', {\n    className: 'card-title',\n    textContent: title,\n  });\n\n  const genres = element('p', {\n    className: 'card-description-element',\n  });\n  convertGenreIdsToNames(genre_ids).then(genreNames => {\n    genres.textContent = `${genreNames.join(', ')} |`;\n  });\n\n  const year = element('p', {\n    className: 'card-description-element',\n    textContent: release_date.slice(0, 4),\n  });\n\n  description.append(genres, year);\n  card.append(poster, filmTitle, description);\n  return card;\n};\n","import { getTrending, searchFilm } from './API.js';\n\nimport { createElement } from './card_creator.js';\n\nconst form = document.querySelector('#searchForm');\nconst catalog = document.querySelector('#catalog');\nconst genreSelect = document.querySelector('#genre-select');\nconst loadMoreBtn = document.querySelector('#load-more');\nconsole.log(`load more: ${loadMoreBtn}`);\n\nlet displayedMovies = 0;\nconst moviesPerPage = 6;\nlet allMovies = [];\n\n// Function to render elements\nconst renderElements = (films, rootList) => {\n  const fragment = document.createDocumentFragment();\n  fragment.append(...films.map(createElement));\n  rootList.append(fragment);\n};\n\n// Fetch trending movies and render on page load\n(async () => {\n  try {\n    const response = await getTrending('day');\n    allMovies = response.results;\n    renderElements(allMovies.slice(0, moviesPerPage), catalog);\n    displayedMovies += moviesPerPage;\n  } catch (error) {\n    console.log(error);\n  }\n})();\n\n// Load More functionality\nloadMoreBtn.addEventListener('click', () => {\n  const moreMovies = allMovies.slice(\n    displayedMovies,\n    displayedMovies + moviesPerPage\n  );\n  renderElements(moreMovies, catalog);\n  displayedMovies += moreMovies.length;\n\n  // Hide Load More button if all movies are displayed\n  if (displayedMovies >= allMovies.length) {\n    loadMoreBtn.style.display = 'none';\n  }\n});\n\n// Search functionality\nform.addEventListener('submit', async e => {\n  e.preventDefault();\n  const searchQuery = document.querySelector('#searchInput').value;\n  if (searchQuery) {\n    try {\n      const response = await searchFilm(searchQuery);\n      catalog.innerHTML = '';\n      allMovies = response.results;\n      displayedMovies = 0;\n      renderElements(allMovies.slice(0, moviesPerPage), catalog);\n      displayedMovies += moviesPerPage;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n});\n\n// Filter by genre\ngenreSelect.addEventListener('change', e => {\n  const selectedGenre = e.target.value;\n  let filteredMovies;\n\n  if (selectedGenre === 'all') {\n    filteredMovies = allMovies;\n  } else {\n    filteredMovies = allMovies.filter(movie =>\n      movie.genre_ids.includes(Number(selectedGenre))\n    );\n  }\n\n  catalog.innerHTML = ''; // Clear current movies\n  renderElements(filteredMovies.slice(0, moviesPerPage), catalog);\n  displayedMovies = moviesPerPage;\n});\n"],"names":["API_KEY","axios","getTrending","time_window","getUpcoming","searchParams","searchFilm","getDetails","movie_id","getTrailer","getGenres","genres","genre","error","convertGenreIdsToNames","genreIds","genreMap","id","openTrailerModal","trailerData","modalTrailer","trailer","vid","event","openDetailsModal","details","modalDetails","backgroundImage","heroElement","defaultHeroContent","createStarElement","type","starElement","displayStarRating","rating","starsContainer","fullStars","halfStar","emptyStars","i","renderMovieHero","movies","movie","desktopImage","tabletImage","mobileImage","renderStars","roundedRating","starHTML","renderTrendingMovies","trendingMovies","trendingContainer","genreNames","genreText","movieElement","movieDetails","isMovieInLibrary","movieId","addMovieToLibrary","library","removeMovieFromLibrary","handleLibraryToggle","button","renderUpcomingMovie","addLibraryButton","element","tag","props","createElement","poster_path","title","genre_ids","release_date","card","poster","description","filmTitle","year","form","catalog","genreSelect","loadMoreBtn","displayedMovies","moviesPerPage","allMovies","renderElements","films","rootList","fragment","moreMovies","e","searchQuery","response","selectedGenre","filteredMovies"],"mappings":"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"}