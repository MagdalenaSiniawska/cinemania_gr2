import{a as s}from"./vendor-nSNXNpMc.js";const b="Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2Y2IxMWQ4ZGE0NTZlOGI5OTIxM2EyNDk4ODM4OGQyNSIsIm5iZiI6MTcyODcyMDEzMC44MDY0Niwic3ViIjoiNjcwYTJiNDEzYmI0NTU3YzY2OWFmYzM5Iiwic2NvcGVzIjpbImFwaV9yZWFkIl0sInZlcnNpb24iOjF9.Pgojbxf9JKo_J1qf6Qmglon5qZgkr9wpZ4I978dGQU8";s.defaults.baseURL="https://api.themoviedb.org/3";s.defaults.headers.common.Authorization=b;const h=async(e="day")=>(await s.get(`/trending/movie/${e}`)).data,f=async()=>(await s.get("movie/upcoming")).data;new URLSearchParams({query:"Deadpool",primary_release_year:2024,page:1});const L=async e=>(await s.get(`/movie/${e}`)).data,I=async e=>(await s.get(`/movie/${e}/videos`)).data,v=async()=>{try{const o=(await s.get("/genre/movie/list")).data.genres;return new Map(o.map(n=>[n.id,n.name]))}catch(e){console.log(e)}},M=async e=>{try{const o=await v();return e.map(r=>o.get(r)||"Unknow genre")}catch(o){console.log(o)}},k=e=>{console.log("Trying to open trailer modal with data:",e);const o=document.getElementById("modal-trailer");if(!o){console.error("Modal element not found!");return}console.log("Trailer data:",e);const n=e.results.find(r=>r.type==="Trailer");n?(o.innerHTML=`
      <div class="modal-content">
        <span class="close-modal">&times;</span>
        <iframe width="560" height="315" src="https://www.youtube.com/embed/${n.key}" 
          frameborder="0" allowfullscreen></iframe>
      </div>
    `,console.log("Trailer found, iframe set:",`https://www.youtube.com/embed/${n.key}`)):(o.innerHTML=`
      <div class="modal-content error-pop-up">
        <span class="close-modal">&times;</span>
        <img src="../images/oops-logo.png" alt="camera icon with popcorn" width="363" height="318"/>
        <p>OOPS... We are very sorry! But we couldnâ€™t find the trailer.</p>
      </div>
    `,console.warn("No trailer found.")),o.style.display="block",console.log("Modal style after setting to block:",window.getComputedStyle(o).display),o.querySelector(".close-modal").addEventListener("click",r=>{r.stopPropagation(),o.style.display="none",console.log("Modal closed via close button.")}),o.querySelector(".modal-content").addEventListener("click",r=>{r.stopPropagation()}),o.addEventListener("click",r=>{r.target===o&&(o.style.display="none",console.log("Modal closed by clicking outside modal-content."))})},N=e=>{const o=document.getElementById("modal-details");if(console.log("Modal element:",o),console.log("Modal is visible:",o.style.display),!o){console.error("Modal element not found!");return}const n=e.vote_average.toFixed(2),r=e.vote_count.toFixed(2),m=e.popularity.toFixed(2),y=e.backdrop_path?`https://image.tmdb.org/t/p/original/${e.backdrop_path}`:`https://image.tmdb.org/t/p/original/${e.poster_path}`;o.innerHTML=`
    <div class="modal-content" style="background-image: url('${y}'); background-size: cover; background-position: center; padding: 20px; color: white;">
      <span class="close-modal" style="cursor: pointer; font-size: 24px;">&times;</span>
      <h2>${e.title}</h2>
      <p><strong>Vote / Votes:</strong> ${n} / ${r}</p>
      <p><strong>Popularity:</strong> ${m}</p>
      <p><strong>Genres:</strong> ${e.genres.map(t=>t.name).join(", ")}</p>
      <p><strong>Overview:</strong> ${e.overview}</p>
      <button id="add-to-library" class="add-to-library-btn">Add to my library</button>
    </div>
  `,o.style.display="block",console.log("Modal should now be displayed:",o.style.display),o.classList.add("show"),console.log("Modal should be shown"),o.querySelector(".close-modal").addEventListener("click",()=>{console.log("Close modal clicked"),o.style.display="none"}),o.addEventListener("click",t=>{t.target===o&&(o.style.display="none")});const i=document.getElementById("add-to-library");i.addEventListener("click",t=>{const a={title:e.title,vote_average:e.vote_average,vote_count:e.vote_count,popularity:e.popularity,genres:e.genres.map(c=>c.name),overview:e.overview,year:new Date(e.release_date).getFullYear(),poster:`https://image.tmdb.org/t/p/w500${e.poster_path}`};(JSON.parse(localStorage.getItem("myLibrary"))||[]).some(c=>c.title===a.title)?(g(a.title),i.textContent="Add to my library"):(p(a),i.textContent="Remove from my library")});function p(t){const a=JSON.parse(localStorage.getItem("myLibrary"))||[];a.push(t),localStorage.setItem("myLibrary",JSON.stringify(a)),alert(`${t.title} has been added to your library!`)}function g(t){let a=JSON.parse(localStorage.getItem("myLibrary"))||[];a=a.filter(l=>l.title!==t),localStorage.setItem("myLibrary",JSON.stringify(a)),alert(`${t} has been removed from your library!`)}function u(t){(JSON.parse(localStorage.getItem("myLibrary"))||[]).some(d=>d.title===t.title)?i.textContent="Remove from My Library":i.textContent="Add to my Library"}u(e)};export{I as a,L as b,N as c,M as d,f as e,h as g,k as o};
//# sourceMappingURL=hero_modals-CRgCPP3_.js.map
