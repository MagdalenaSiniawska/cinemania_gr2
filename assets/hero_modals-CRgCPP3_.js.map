{"version":3,"file":"hero_modals-CRgCPP3_.js","sources":["../../src/js/API.js","../../src/js/hero_modals.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2Y2IxMWQ4ZGE0NTZlOGI5OTIxM2EyNDk4ODM4OGQyNSIsIm5iZiI6MTcyODcyMDEzMC44MDY0Niwic3ViIjoiNjcwYTJiNDEzYmI0NTU3YzY2OWFmYzM5Iiwic2NvcGVzIjpbImFwaV9yZWFkIl0sInZlcnNpb24iOjF9.Pgojbxf9JKo_J1qf6Qmglon5qZgkr9wpZ4I978dGQU8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = API_KEY;\n\n//pozyskanie wszystkich filmów - do wykorzystania przy populowania katalogu\n//time_window to string \"day\" albo \"week\"\nexport const getTrending = async (time_window = 'day') => {\n  const response = await axios.get(`/trending/movie/${time_window}`);\n  return response.data;\n};\n\n//pozyskiwanie nadchodzących\nexport const getUpcoming = async () => {\n  const response = await axios.get(`movie/upcoming`);\n  return response.data;\n};\n\n//wyszukiwanie filmów\n\n//przykładowe searchParams, do zmiany na input value jak już będzie przygotowana strona;\nconst searchParams = new URLSearchParams({\n  query: 'Deadpool',\n  primary_release_year: 2024,\n  page: 1,\n});\n\nexport const searchFilm = async () => {\n  const response = await axios.get(`/search/movie?${searchParams}`);\n  return response.data;\n};\n\n//pozyskiwanie szczegółów\nexport const getDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}`);\n  return response.data;\n};\n\n//trailer\nexport const getTrailer = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/videos`);\n  return response.data;\n};\n\n//gatunki\nconst getGenres = async () => {\n  try {\n    const response = await axios.get(`/genre/movie/list`);\n    const genres = response.data.genres;\n    return new Map(genres.map(genre => [genre.id, genre.name]));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const convertGenreIdsToNames = async genreIds => {\n  try {\n    const genreMap = await getGenres();\n    const genreNames = genreIds.map(id => genreMap.get(id) || 'Unknow genre');\n    return genreNames;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//kraje\nexport const getCountries = async () => {\n  const response = await axios.get(`/configuration/countries`);\n  return response.data;\n};\n\n//logowanie danych do konsoli\nexport const logData = async fn => {\n  try {\n    const data = await fn;\n    console.log(data);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","// Modal dla zwiastuna filmu\nexport const openTrailerModal = (trailerData) => {\n  console.log('Trying to open trailer modal with data:', trailerData);\n  const modalTrailer = document.getElementById('modal-trailer');\n\n  // Sprawdzamy, czy istnieje modal\n  if (!modalTrailer) {\n    console.error(\"Modal element not found!\");\n    return;\n  }\n\n  // Logujemy trailerData, aby sprawdzić, czy zawiera poprawne dane\n  console.log('Trailer data:', trailerData);\n\n  // Znalezienie zwiastuna w wynikach\n  const trailer = trailerData.results.find(vid => vid.type === 'Trailer');\n  if (trailer) {\n    // Jeżeli zwiastun znaleziony, wstaw iframe do modala\n    modalTrailer.innerHTML = `\n      <div class=\"modal-content\">\n        <span class=\"close-modal\">&times;</span>\n        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/${trailer.key}\" \n          frameborder=\"0\" allowfullscreen></iframe>\n      </div>\n    `;\n    console.log('Trailer found, iframe set:', `https://www.youtube.com/embed/${trailer.key}`);\n  } else {\n    // Jeśli brak zwiastuna, pokazujemy komunikat o błędzie\n    modalTrailer.innerHTML = `\n      <div class=\"modal-content error-pop-up\">\n        <span class=\"close-modal\">&times;</span>\n        <img src=\"../images/oops-logo.png\" alt=\"camera icon with popcorn\" width=\"363\" height=\"318\"/>\n        <p>OOPS... We are very sorry! But we couldn’t find the trailer.</p>\n      </div>\n    `;\n    console.warn('No trailer found.');\n  }\n\n  modalTrailer.style.display = 'block';\n  console.log('Modal style after setting to block:', window.getComputedStyle(modalTrailer).display);\n\n  // Zamknięcie modala przez kliknięcie w ikonę zamknięcia\n  modalTrailer.querySelector('.close-modal').addEventListener('click', (event) => {\n    event.stopPropagation();\n    modalTrailer.style.display = 'none';\n    console.log('Modal closed via close button.');\n  });\n\n  // Zabezpieczenie przed przypadkowym zamknięciem przez kliknięcie w zawartość modala\n  modalTrailer.querySelector('.modal-content').addEventListener('click', (event) => {\n    event.stopPropagation(); \n  });\n\n  // Zamknięcie modala przez kliknięcie w tło (ale nie w modal-content)\n  modalTrailer.addEventListener('click', (event) => {\n    if (event.target === modalTrailer) {\n      modalTrailer.style.display = 'none';\n      console.log('Modal closed by clicking outside modal-content.');\n    }\n  });\n};\n\n// Modal dla szczegółów filmu\nexport const openDetailsModal = (details) => {\n  const modalDetails = document.getElementById('modal-details');\n\n  console.log('Modal element:', modalDetails); // Dodaj ten log\n  console.log('Modal is visible:', modalDetails.style.display); // Dodaj ten log\n\n  if (!modalDetails) {\n    console.error('Modal element not found!');\n    return;\n  }\n\n  const voteAverage = details.vote_average.toFixed(2);\n  const voteCount = details.vote_count.toFixed(2);\n  const popularity = details.popularity.toFixed(2);\n\n  const backgroundImage = details.backdrop_path\n    ? `https://image.tmdb.org/t/p/original/${details.backdrop_path}`\n    : `https://image.tmdb.org/t/p/original/${details.poster_path}`;\n\n  modalDetails.innerHTML = `\n    <div class=\"modal-content\" style=\"background-image: url('${backgroundImage}'); background-size: cover; background-position: center; padding: 20px; color: white;\">\n      <span class=\"close-modal\" style=\"cursor: pointer; font-size: 24px;\">&times;</span>\n      <h2>${details.title}</h2>\n      <p><strong>Vote / Votes:</strong> ${voteAverage} / ${voteCount}</p>\n      <p><strong>Popularity:</strong> ${popularity}</p>\n      <p><strong>Genres:</strong> ${details.genres.map(genre => genre.name).join(', ')}</p>\n      <p><strong>Overview:</strong> ${details.overview}</p>\n      <button id=\"add-to-library\" class=\"add-to-library-btn\">Add to my library</button>\n    </div>\n  `;\n  modalDetails.style.display = 'block';\n  console.log('Modal should now be displayed:', modalDetails.style.display);\n\n  // Ustaw modal na widoczny\n  modalDetails.classList.add('show'); \n  console.log('Modal should be shown');\n  \n  // Zamknięcie modala dla szczegółów filmu przez ikonę zamknięcia\n  modalDetails.querySelector('.close-modal').addEventListener('click', () => {\n    console.log('Close modal clicked'); // Dodaj ten log\n    modalDetails.style.display = 'none';\n  });\n\n  // Zamknięcie modala przez kliknięcie w tło modala\n  modalDetails.addEventListener('click', (event) => {\n    if (event.target === modalDetails) {\n      modalDetails.style.display = 'none';\n    }\n  });\n\n  // Dodanie filmu do biblioteki po kliknięciu w przycisk \"Add to my library\"\n  const addToLibraryButton = document.getElementById('add-to-library');\n  addToLibraryButton.addEventListener('click', (event) => {\n    const movieToAdd = {\n      title: details.title,\n      vote_average: details.vote_average,\n      vote_count: details.vote_count,\n      popularity: details.popularity,\n      genres: details.genres.map(genre => genre.name),\n      overview: details.overview,\n      year: new Date(details.release_date).getFullYear(),\n      poster: `https://image.tmdb.org/t/p/w500${details.poster_path}`\n    };\n\n    // Sprawdź, czy film jest już w bibliotece\n    const myLibrary = JSON.parse(localStorage.getItem('myLibrary')) || [];\n    const movieExists = myLibrary.some(item => item.title === movieToAdd.title);\n\n    if (!movieExists) {\n      addMovieToLibrary(movieToAdd);\n      addToLibraryButton.textContent = 'Remove from my library'; // Zmień tekst przycisku\n    } else {\n      removeMovieFromLibrary(movieToAdd.title);\n      addToLibraryButton.textContent = 'Add to my library'; // Zmień tekst przycisku\n    }\n  });\n\n  // Funkcja dodawania filmu do localStorage\n  function addMovieToLibrary(movie) {\n    const myLibrary = JSON.parse(localStorage.getItem('myLibrary')) || [];\n    myLibrary.push(movie);\n    localStorage.setItem('myLibrary', JSON.stringify(myLibrary));\n    alert(`${movie.title} has been added to your library!`); // Użycie alertu\n  }\n\n  // Funkcja usuwania filmu z localStorage\n  function removeMovieFromLibrary(movieTitle) {\n    let myLibrary = JSON.parse(localStorage.getItem('myLibrary')) || [];\n    myLibrary = myLibrary.filter(movie => movie.title !== movieTitle);\n    localStorage.setItem('myLibrary', JSON.stringify(myLibrary));\n    alert(`${movieTitle} has been removed from your library!`); // Użycie alertu\n  }\n\n  // Inicjalizacja przycisku na podstawie obecności filmu w localStorage\n  function initializeLibraryButton(details) {\n    const myLibrary = JSON.parse(localStorage.getItem('myLibrary')) || [];\n    const movieExists = myLibrary.some(movie => movie.title === details.title);\n\n    if (movieExists) {\n      addToLibraryButton.textContent = 'Remove from My Library';\n    } else {\n      addToLibraryButton.textContent = 'Add to my Library';\n    }\n  }\n\n  initializeLibraryButton(details);\n};"],"names":["API_KEY","axios","getTrending","time_window","getUpcoming","getDetails","movie_id","getTrailer","getGenres","genres","genre","error","convertGenreIdsToNames","genreIds","genreMap","id","openTrailerModal","trailerData","modalTrailer","trailer","vid","event","openDetailsModal","details","modalDetails","voteAverage","voteCount","popularity","backgroundImage","addToLibraryButton","movieToAdd","item","removeMovieFromLibrary","addMovieToLibrary","movie","myLibrary","movieTitle","initializeLibraryButton"],"mappings":"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"}