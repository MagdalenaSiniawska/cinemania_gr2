{"version":3,"file":"hero-Ldttc4iv.js","sources":["../../src/js/API.js","../../src/js/hero_modals.js","../../src/js/hero.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2Y2IxMWQ4ZGE0NTZlOGI5OTIxM2EyNDk4ODM4OGQyNSIsIm5iZiI6MTcyODcyMDEzMC44MDY0Niwic3ViIjoiNjcwYTJiNDEzYmI0NTU3YzY2OWFmYzM5Iiwic2NvcGVzIjpbImFwaV9yZWFkIl0sInZlcnNpb24iOjF9.Pgojbxf9JKo_J1qf6Qmglon5qZgkr9wpZ4I978dGQU8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = API_KEY;\n\n//pozyskanie wszystkich filmów - do wykorzystania przy populowania katalogu\n//time_window to string \"day\" albo \"week\"\nexport const getTrending = async (time_window = 'day') => {\n  const response = await axios.get(`/trending/movie/${time_window}`);\n  return response.data;\n};\n\n//pozyskiwanie nadchodzących\nexport const getUpcoming = async () => {\n  const response = await axios.get(`movie/upcoming`);\n  return response.data;\n};\n\n//wyszukiwanie filmów\n\n//przykładowe searchParams, do zmiany na input value jak już będzie przygotowana strona;\nconst searchParams = new URLSearchParams({\n  query: 'Deadpool',\n  primary_release_year: 2024,\n  page: 1,\n});\n\nexport const searchFilm = async () => {\n  const response = await axios.get(`/search/movie?${searchParams}`);\n  return response.data;\n};\n\n//pozyskiwanie szczegółów\nexport const getDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}`);\n  return response.data;\n};\n\n//trailer\nexport const getTrailer = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/videos`);\n  return response.data;\n};\n\n//gatunki\nconst getGenres = async () => {\n  try {\n    const response = await axios.get(`/genre/movie/list`);\n    const genres = response.data.genres;\n    return new Map(genres.map(genre => [genre.id, genre.name]));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const convertGenreIdsToNames = async genreIds => {\n  try {\n    const genreMap = await getGenres();\n    const genreNames = genreIds.map(id => genreMap.get(id) || 'Unknow genre');\n    return genreNames;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//kraje\nexport const getCountries = async () => {\n  const response = await axios.get(`/configuration/countries`);\n  return response.data;\n};\n\n//logowanie danych do konsoli\nexport const logData = async fn => {\n  try {\n    const data = await fn;\n    console.log(data);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","// Modal dla zwiastuna filmu\nexport const openTrailerModal = trailerData => {\n  const modalTrailer = document.getElementById('modal-trailer');\n  const trailer = trailerData.results.find(vid => vid.type === 'Trailer');\n  const trailerBtn = document.querySelector('#watch-trailer');\n\n  trailerBtn.addEventListener('click', () => {\n    modalTrailer.style.display.block;\n  });\n  if (trailer) {\n    modalTrailer.innerHTML = `          <div class=\"modal-content\">\n            <span class=\"close-modal\">&times;</span>\n            <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/${trailer.key}\"\n              frameborder=\"0\" allowfullscreen></iframe>\n          </div>\n        `;\n  } else {\n    modalTrailer.innerHTML = `<div class=\"modal-content error-pop-up\">\n            <span class=\"close-modal\">&times;</span>\n              <p>OOPS... </br>We are very sorry! </br>But we couldn’t find the trailer.</p>\n               <img src=\"../images/oops-logo.png\" alt=\"camera icon with popcorn\" width=\"363\" height=\"318\"/>\n          </div>\n        `;\n  }\n\n  modalTrailer.style.display = 'block';\n  // Zamknięcie modala dla zwiastuna filmu przez ikonę zamknięcia\n  modalTrailer.querySelector('.close-modal').addEventListener('click', () => {\n    modalTrailer.style.display = 'none';\n    modalTrailer.innerHTML = '';\n  });\n\n  // Zamknięcie modala przez kliknięcie w tło modala\n  modalTrailer.addEventListener('click', event => {\n    if (event.target === modalTrailer) {\n      modalTrailer.style.display = 'none';\n      modalTrailer.innerHTML = '';\n    }\n  });\n};\n\n// Modal dla szczegółów filmu\n\nexport const openDetailsModal = details => {\n  const modalDetails = document.getElementById('modal-details');\n\n  const backgroundImage = details.backdrop_path\n    ? `https://image.tmdb.org/t/p/original/${details.backdrop_path}`\n    : `https://image.tmdb.org/t/p/original/${details.poster_path}`;\n\n  modalDetails.innerHTML = ` <div class=\"modal-content\">\n      <span class=\"close-modal\">&times;</span> <!-- Przeniesiono przycisk zamykania tutaj -->\n      <div class=\"modal-image\" style=\"background-image: url('${backgroundImage}');\"></div>\n      <div class=\"modal-text\">\n        <h3 class=\"modal-title\">${details.title}</h3>\n\n        <table class=\"tags-grade-wrap\">\n        <tr>\n          <th>Vote / Votes:</th>\n          <td id=\"hero-modal-vote\">\n            <span class=\"hero-vote-average-container\">\n              <span class=\"hero-vote-average\">${details.vote_average}</span>\n            </span>\n            <span> / </span>\n            <span class=\"hero-vote-count-container\">\n              <span class=\"hero-vote-count\">${details.vote_count}</span>\n            </span>\n          </td>\n        </tr>\n        <tr>\n          <th>Popularity:</th>\n          <td id=\"hero-popularity\">${details.popularity.toFixed(1)}</td>\n        </tr>\n        <tr>\n          <th>Genre:</th>\n          <td id=\"hero-genre\">${details.genres.map(genre => genre.name).join(', ')}</td>\n        </tr>\n      </table>\n        <div class=\"modal-text-about\">\n        <p ><strong>About:</strong></p>\n        <p class=\"modal-text-about\">${details.overview}</p>\n        </div>\n        <button id=\"add-to-library\" class=\"add-to-library-btn\">Add to my library</button>\n      </div>\n    </div>\n  `;\n\n  modalDetails.style.display = 'block';\n\n  // Zamknięcie modala dla szczegółów filmu przez ikonę zamknięciamodalDetails.querySelector('.close-modal').addEventListener('click', () => {\n  modalDetails.querySelector('.close-modal').addEventListener('click', () => {\n    modalDetails.style.display = 'none';\n  });\n\n  // Zamknięcie modala przez kliknięcie w tło modala\n  modalDetails.addEventListener('click', event => {\n    if (event.target === modalDetails) {\n      modalDetails.style.display = 'none';\n    }\n  });\n  // Dodanie filmu do biblioteki po kliknięciu w przycisk \"Add to my library\"\n  const addToLibraryButton = document.getElementById('add-to-library');\n  addToLibraryButton.addEventListener('click', event => {\n    const movieToAdd = {\n      title: details.title,\n      vote_average: details.vote_average,\n      vote_count: details.vote_count,\n      popularity: details.popularity,\n      genres: details.genres.map(genre => genre.name),\n      overview: details.overview,\n      year: new Date(details.release_date).getFullYear(),\n      poster: `https://image.tmdb.org/t/p/w500${details.poster_path}`,\n    };\n\n    // Sprawdź, czy film jest już w bibliotece\n    const myLibrary = JSON.parse(localStorage.getItem('myLibrary')) || [];\n    const movieExists = myLibrary.some(item => item.title === movieToAdd.title);\n\n    if (!movieExists) {\n      addMovieToLibrary(movieToAdd);\n      addToLibraryButton.textContent = 'Remove from my library'; // Zmień tekst przycisku\n    } else {\n      removeMovieFromLibrary(movieToAdd.title);\n      addToLibraryButton.textContent = 'Add to my library'; // Zmień tekst przycisku\n    }\n  });\n\n  // Funkcja dodawania filmu do localStorage\n  function addMovieToLibrary(movie) {\n    const myLibrary = JSON.parse(localStorage.getItem('myLibrary')) || [];\n    myLibrary.push(movie);\n    localStorage.setItem('myLibrary', JSON.stringify(myLibrary));\n    alert(`${movie.title} has been added to your library!`); // Użycie alertu\n  }\n\n  // Funkcja usuwania filmu z localStorage\n  function removeMovieFromLibrary(movieTitle) {\n    let myLibrary = JSON.parse(localStorage.getItem('myLibrary')) || [];\n    myLibrary = myLibrary.filter(movie => movie.title !== movieTitle);\n    localStorage.setItem('myLibrary', JSON.stringify(myLibrary));\n    alert(`${movieTitle} has been removed from your library!`); // Użycie alertu\n  }\n\n  // Inicjalizacja przycisku na podstawie obecności filmu w localStorage\n  function initializeLibraryButton(details) {\n    const myLibrary = JSON.parse(localStorage.getItem('myLibrary')) || [];\n    const movieExists = myLibrary.some(movie => movie.title === details.title);\n\n    if (movieExists) {\n      addToLibraryButton.textContent = 'Remove from My Library';\n    } else {\n      addToLibraryButton.textContent = 'Add to my Library';\n    }\n  }\n\n  initializeLibraryButton(details);\n};\n","import { getTrending, getDetails, getTrailer } from './API.js';\nimport { openDetailsModal, openTrailerModal } from './hero_modals.js';\n\nconst heroElement = document.querySelector('.hero');\nconst defaultHeroContent = `\n  <div class=\"hero-content\">\n    <h1 class=\"hero-header\">Let’s Make Your Own Cinema</h1>\n    <p class=\"hero-description get_started_message\">Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers. Decorate your space, choose your films, and stock up on snacks for the full experience.</p>\n    <button id=\"get-started\" class=\"get-started-btn\">Get Started</button>\n  </div>\n`;\n\n// Funkcja pomocnicza tworzenia elementu gwiazdki\nconst createStarElement = type => {\n  const starElement = document.createElement('span');\n  starElement.classList.add(`${type}-star`);\n\n  starElement.innerHTML = '&#9733;';\n\n  if (type === 'empty') {\n    starElement.innerHTML = '&#9734;';\n  }\n\n  return starElement;\n};\n\n// Wyświetlanie gwiazdek jako rating\nexport const displayStarRating = rating => {\n  const starsContainer = document.createElement('div');\n  starsContainer.classList.add('star-rating');\n\n  const fullStars = Math.floor(rating / 2);\n  const halfStar = rating % 2 >= 1 ? 1 : 0;\n  const emptyStars = 5 - fullStars - halfStar;\n\n  for (let i = 0; i < fullStars; i++) {\n    starsContainer.appendChild(createStarElement('full'));\n  }\n\n  if (halfStar) {\n    starsContainer.appendChild(createStarElement('half'));\n  }\n\n  for (let i = 0; i < emptyStars; i++) {\n    starsContainer.appendChild(createStarElement('empty'));\n  }\n\n  return starsContainer.outerHTML;\n};\n\n// Funkcja wyciągania filmu dnia\n\nconst renderMovieHero = async () => {\n  try {\n    const data = await getTrending();\n    const movies = data.results;\n\n    if (movies.length === 0) {\n      heroElement.innerHTML = defaultHeroContent;\n      document.getElementById('get-started').addEventListener('click', () => {\n        window.location.href = '/catalog';\n      });\n      return;\n    }\n\n    const movie = movies[Math.floor(Math.random() * movies.length)];\n    heroElement.style.backgroundImage = `linear-gradient(to right, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0.1)), url(https://image.tmdb.org/t/p/original/${movie.backdrop_path})`;\n\n    // Zamiana numerycznego ratingu na gwiazdki\n    heroElement.innerHTML = `\n      <div class=\"movie-info\">\n        <h2 class=\"hero-header\">${movie.title}</h2>\n        <p class=\"star-rating\">${displayStarRating(movie.vote_average)}</p>\n        <p class=\"hero-description\">${movie.overview}</p>\n        <button id=\"watch-trailer\" class=\"watch-trailer-btn\">Watch Trailer</button>\n        <button id=\"more-details\" class=\"more-details-btn\">More Details</button>\n      </div>\n    `;\n\n    document\n      .getElementById('watch-trailer')\n      .addEventListener('click', async () => {\n        const trailerData = await getTrailer(movie.id);\n        openTrailerModal(trailerData);\n      });\n\n    document\n      .getElementById('more-details')\n      .addEventListener('click', async () => {\n        const details = await getDetails(movie.id);\n        openDetailsModal(details);\n      });\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n\n    const desktopImage = '../images/hero-desktop.jpg';\n    const tabletImage = '../images/hero-tablet.jpg';\n    const mobileImage = '../images/hero-mobile.jpg';\n\n    // Sprawdzenie rozmiaru okna\n    if (window.innerWidth >= 1024) {\n      heroElement.style.backgroundImage = `url(${desktopImage})`;\n    } else if (window.innerWidth >= 768) {\n      heroElement.style.backgroundImage = `url(${tabletImage})`;\n    } else {\n      heroElement.style.backgroundImage = `url(${mobileImage})`;\n    }\n\n    heroElement.innerHTML = defaultHeroContent;\n  }\n};\n\nrenderMovieHero();\n"],"names":["API_KEY","axios","getTrending","time_window","getUpcoming","getDetails","movie_id","getTrailer","getGenres","genres","genre","error","convertGenreIdsToNames","genreIds","genreMap","id","openTrailerModal","trailerData","modalTrailer","trailer","vid","event","openDetailsModal","details","modalDetails","backgroundImage","addToLibraryButton","movieToAdd","item","removeMovieFromLibrary","addMovieToLibrary","movie","myLibrary","movieTitle","initializeLibraryButton","heroElement","defaultHeroContent","createStarElement","type","starElement","displayStarRating","rating","starsContainer","fullStars","halfStar","emptyStars","renderMovieHero","movies","desktopImage","tabletImage","mobileImage"],"mappings":"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"}