{"version":3,"file":"library.js","sources":["../src/js/library.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  const catalog = document.querySelector('#catalog');\n  const genreSelect = document.querySelector('#genre-select');\n  const loadMoreBtn = document.querySelector('#load-more');\n\n  let displayedMovies = 0;\n  const moviesPerPage = 6;\n  let allMovies = [];\n  let filteredMovies = []; // Zmienna do przechowywania przefiltrowanych filmów\n\n  // Lista gatunków (w małych literach)\n  const genres = ['action', 'drama', 'comedy', 'horror', 'thriller'];\n\n  const populateGenres = () => {\n    const defaultOption = document.createElement('option');\n    defaultOption.value = 'all';\n    defaultOption.textContent = 'Genre';\n    genreSelect.appendChild(defaultOption);\n\n    genres.forEach(genre => {\n      const option = document.createElement('option');\n      option.value = genre;\n      option.textContent = genre.charAt(0).toUpperCase() + genre.slice(1);\n      genreSelect.appendChild(option);\n    });\n  };\n\n  const createStarElement = type => {\n    const starElement = document.createElement('span');\n    starElement.classList.add(`${type}-star`);\n    starElement.innerHTML = type === 'empty' ? '&#9734;' : '&#9733;';\n    return starElement;\n  };\n\n  const displayStarRating = rating => {\n    const starsContainer = document.createElement('div');\n    starsContainer.classList.add('star-rating');\n    const normalizedRating = rating / 2;\n\n    const fullStars = Math.floor(normalizedRating);\n    const halfStar = normalizedRating % 1 >= 0.5 ? 1 : 0;\n    const emptyStars = 5 - fullStars - halfStar;\n\n    for (let i = 0; i < fullStars; i++) {\n      starsContainer.appendChild(createStarElement('full'));\n    }\n\n    if (halfStar) {\n      starsContainer.appendChild(createStarElement('half'));\n    }\n\n    for (let i = 0; i < emptyStars; i++) {\n      starsContainer.appendChild(createStarElement('empty'));\n    }\n\n    return starsContainer.outerHTML;\n  };\n\n  const renderMovies = (movies, container) => {\n    const fragment = document.createDocumentFragment();\n\n    movies.forEach(movie => {\n      const movieElement = document.createElement('div');\n      movieElement.classList.add('film-card');\n      console.log(movie);\n      const rating = movie.vote_average;\n\n      movieElement.innerHTML = `\n                <img src=\"https://image.tmdb.org/t/p/w500${\n                  movie.poster || ''\n                }\" alt=\"${movie.title || ''} poster\" class=\"film-poster\"/>\n                <div class =\"film-card-descr\">\n                <h3 class =\"film-card-title\">${movie.title || ''}</h3>\n                <p class =\"film-card-genre\">${\n                  movie.genres.slice(0, 2).join(', ') || 'N/A'\n                }</p>\n                <p class =\"film-card-year\"> ${movie.year || ''}</p>\n                <p class =\"film-card-stars\">${\n                  displayStarRating(rating) || ''\n                }</p>\n                </div>\n            `;\n      fragment.appendChild(movieElement);\n    });\n\n    container.append(fragment);\n  };\n\n  const fetchMoviesFromLibrary = () => {\n    const myLibrary = JSON.parse(localStorage.getItem('myLibrary')) || [];\n    return Array.isArray(myLibrary) ? myLibrary : [];\n  };\n\n  const catFilms = document.querySelector('.catalog-films');\n  const loadMovies = () => {\n    allMovies = fetchMoviesFromLibrary();\n    catFilms.innerHTML = '';\n    filteredMovies = allMovies; // Na początku wyświetlamy wszystkie filmy\n\n    if (!Array.isArray(allMovies) || allMovies.length === 0) {\n      console.warn('No movies found in library or library is not an array.');\n      document.querySelector('#empty-library').style.display = 'block';\n      loadMoreBtn.style.display = 'none';\n\n      return;\n    }\n\n    renderMovies(filteredMovies.slice(0, moviesPerPage), catFilms);\n    displayedMovies = Math.min(moviesPerPage, filteredMovies.length);\n\n    loadMoreBtn.style.display =\n      displayedMovies >= filteredMovies.length ? 'none' : 'block';\n  };\n\n  loadMoreBtn.addEventListener('click', () => {\n    const moreMovies = filteredMovies.slice(\n      displayedMovies,\n      displayedMovies + moviesPerPage\n    );\n    renderMovies(moreMovies, catFilms);\n    displayedMovies += moreMovies.length;\n\n    loadMoreBtn.style.display =\n      displayedMovies >= filteredMovies.length ? 'none' : 'block';\n  });\n\n  // Filtrowanie po kategorii wśród zapisanych filmów\n  genreSelect.addEventListener('change', e => {\n    const selectedGenre = e.target.value;\n\n    // Filtrowanie filmów\n    filteredMovies = allMovies.filter(movie => {\n      return (\n        selectedGenre === 'all' ||\n        movie.genres.map(g => g.toLowerCase()).includes(selectedGenre)\n      );\n    });\n\n    catFilms.innerHTML = '';\n    renderMovies(filteredMovies.slice(0, moviesPerPage), catFilms);\n    displayedMovies = Math.min(moviesPerPage, filteredMovies.length);\n\n    loadMoreBtn.style.display =\n      displayedMovies >= filteredMovies.length ? 'none' : 'block';\n  });\n\n  // Ładowanie zapisanych filmów po załadowaniu strony\n  populateGenres(); // Dodaj gatunki do selecta\n  loadMovies();\n});\n\n//Genre\nconst genreSelect = document.querySelector('#genre-select');\ngenreSelect.addEventListener('change', e => {\n  const selectedGenre = e.target.value;\n\n  const options = document.querySelectorAll('#genre-select option');\n  options.forEach(option => (option.style.color = '#fff'));\n\n  const selectedOption = options[genreSelect.selectedIndex];\n  selectedOption.style.color = 'orange';\n\n  let filteredMovies;\n\n  if (selectedGenre === 'all') {\n    filteredMovies = allMovies;\n  } else {\n    filteredMovies = allMovies.filter(movie =>\n      movie.genre_ids.includes(Number(selectedGenre))\n    );\n  }\n\n  catFilms.innerHTML = '';\n  renderElements(filteredMovies.slice(0, moviesPerPage), catFilms);\n  displayedMovies = moviesPerPage;\n});\n"],"names":["genreSelect","loadMoreBtn","displayedMovies","moviesPerPage","allMovies","filteredMovies","genres","populateGenres","defaultOption","genre","option","createStarElement","type","starElement","displayStarRating","rating","starsContainer","normalizedRating","fullStars","halfStar","emptyStars","i","renderMovies","movies","container","fragment","movie","movieElement","fetchMoviesFromLibrary","myLibrary","catFilms","loadMovies","moreMovies","selectedGenre","g","e","options","selectedOption"],"mappings":"wEAAA,SAAS,iBAAiB,mBAAoB,IAAM,CAClC,SAAS,cAAc,UAAU,EACjD,MAAMA,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAc,SAAS,cAAc,YAAY,EAEvD,IAAIC,EAAkB,EACtB,MAAMC,EAAgB,EACtB,IAAIC,EAAY,CAAA,EACZC,EAAiB,CAAA,EAGrB,MAAMC,EAAS,CAAC,SAAU,QAAS,SAAU,SAAU,UAAU,EAE3DC,EAAiB,IAAM,CAC3B,MAAMC,EAAgB,SAAS,cAAc,QAAQ,EACrDA,EAAc,MAAQ,MACtBA,EAAc,YAAc,QAC5BR,EAAY,YAAYQ,CAAa,EAErCF,EAAO,QAAQG,GAAS,CACtB,MAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,MAAQD,EACfC,EAAO,YAAcD,EAAM,OAAO,CAAC,EAAE,YAAW,EAAKA,EAAM,MAAM,CAAC,EAClET,EAAY,YAAYU,CAAM,CACpC,CAAK,CACL,EAEQC,EAAoBC,GAAQ,CAChC,MAAMC,EAAc,SAAS,cAAc,MAAM,EACjD,OAAAA,EAAY,UAAU,IAAI,GAAGD,CAAI,OAAO,EACxCC,EAAY,UAAYD,IAAS,QAAU,UAAY,UAChDC,CACX,EAEQC,EAAoBC,GAAU,CAClC,MAAMC,EAAiB,SAAS,cAAc,KAAK,EACnDA,EAAe,UAAU,IAAI,aAAa,EAC1C,MAAMC,EAAmBF,EAAS,EAE5BG,EAAY,KAAK,MAAMD,CAAgB,EACvCE,EAAWF,EAAmB,GAAK,GAAM,EAAI,EAC7CG,EAAa,EAAIF,EAAYC,EAEnC,QAASE,EAAI,EAAGA,EAAIH,EAAWG,IAC7BL,EAAe,YAAYL,EAAkB,MAAM,CAAC,EAGlDQ,GACFH,EAAe,YAAYL,EAAkB,MAAM,CAAC,EAGtD,QAASU,EAAI,EAAGA,EAAID,EAAYC,IAC9BL,EAAe,YAAYL,EAAkB,OAAO,CAAC,EAGvD,OAAOK,EAAe,SAC1B,EAEQM,EAAe,CAACC,EAAQC,IAAc,CAC1C,MAAMC,EAAW,SAAS,yBAE1BF,EAAO,QAAQG,GAAS,CACtB,MAAMC,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,UAAU,IAAI,WAAW,EACtC,QAAQ,IAAID,CAAK,EACjB,MAAMX,EAASW,EAAM,aAErBC,EAAa,UAAY;AAAA,2DAEbD,EAAM,QAAU,EAClC,UAA0BA,EAAM,OAAS,EAAE;AAAA;AAAA,+CAEIA,EAAM,OAAS,EAAE;AAAA,8CAE9CA,EAAM,OAAO,MAAM,EAAG,CAAC,EAAE,KAAK,IAAI,GAAK,KACxC;AAAA,8CAC6BA,EAAM,MAAQ,EAAE;AAAA,8CAE5CZ,EAAkBC,CAAM,GAAK,EAC9B;AAAA;AAAA,cAGXU,EAAS,YAAYE,CAAY,CACvC,CAAK,EAEDH,EAAU,OAAOC,CAAQ,CAC7B,EAEQG,EAAyB,IAAM,CACnC,MAAMC,EAAY,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,GAAK,GACnE,OAAO,MAAM,QAAQA,CAAS,EAAIA,EAAY,CAAA,CAClD,EAEQC,EAAW,SAAS,cAAc,gBAAgB,EAClDC,EAAa,IAAM,CAKvB,GAJA3B,EAAYwB,EAAsB,EAClCE,EAAS,UAAY,GACrBzB,EAAiBD,EAEb,CAAC,MAAM,QAAQA,CAAS,GAAKA,EAAU,SAAW,EAAG,CACvD,QAAQ,KAAK,wDAAwD,EACrE,SAAS,cAAc,gBAAgB,EAAE,MAAM,QAAU,QACzDH,EAAY,MAAM,QAAU,OAE5B,MACD,CAEDqB,EAAajB,EAAe,MAAM,EAAGF,CAAa,EAAG2B,CAAQ,EAC7D5B,EAAkB,KAAK,IAAIC,EAAeE,EAAe,MAAM,EAE/DJ,EAAY,MAAM,QAChBC,GAAmBG,EAAe,OAAS,OAAS,OAC1D,EAEEJ,EAAY,iBAAiB,QAAS,IAAM,CAC1C,MAAM+B,EAAa3B,EAAe,MAChCH,EACAA,EAAkBC,CACxB,EACImB,EAAaU,EAAYF,CAAQ,EACjC5B,GAAmB8B,EAAW,OAE9B/B,EAAY,MAAM,QAChBC,GAAmBG,EAAe,OAAS,OAAS,OAC1D,CAAG,EAGDL,EAAY,iBAAiB,SAAU,GAAK,CAC1C,MAAMiC,EAAgB,EAAE,OAAO,MAG/B5B,EAAiBD,EAAU,OAAOsB,GAE9BO,IAAkB,OAClBP,EAAM,OAAO,IAAIQ,GAAKA,EAAE,YAAa,CAAA,EAAE,SAASD,CAAa,CAEhE,EAEDH,EAAS,UAAY,GACrBR,EAAajB,EAAe,MAAM,EAAGF,CAAa,EAAG2B,CAAQ,EAC7D5B,EAAkB,KAAK,IAAIC,EAAeE,EAAe,MAAM,EAE/DJ,EAAY,MAAM,QAChBC,GAAmBG,EAAe,OAAS,OAAS,OAC1D,CAAG,EAGDE,IACAwB,GACF,CAAC,EAGD,MAAM/B,EAAc,SAAS,cAAc,eAAe,EAC1DA,EAAY,iBAAiB,SAAUmC,GAAK,CAC1C,MAAMF,EAAgBE,EAAE,OAAO,MAEzBC,EAAU,SAAS,iBAAiB,sBAAsB,EAChEA,EAAQ,QAAQ1B,GAAWA,EAAO,MAAM,MAAQ,MAAO,EAEvD,MAAM2B,EAAiBD,EAAQpC,EAAY,aAAa,EACxDqC,EAAe,MAAM,MAAQ,SAE7B,IAAIhC,EAEA4B,IAAkB,MACpB5B,EAAiB,UAEjBA,EAAiB,UAAU,OAAOqB,GAChCA,EAAM,UAAU,SAAS,OAAOO,CAAa,CAAC,CACpD,EAGE,SAAS,UAAY,GACrB,eAAe5B,EAAe,MAAM,EAAG,aAAa,EAAG,QAAQ,EAC/D,gBAAkB,aACpB,CAAC"}