{"version":3,"file":"library.js","sources":["../src/js/library.js"],"sourcesContent":["import {\n  getTrending,\n  getDetails,\n  getUpcoming,\n  searchFilm,\n  convertGenreIdsToNames,\n} from './API.js';\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  const catalog = document.querySelector('#catalog');\n  const genreSelect = document.querySelector('#genre-select');\n  const loadMoreBtn = document.querySelector('#load-more');\n  const emptyLibrarySection = document.querySelector('#empty-library');\n\n  let displayedMovies = 0;\n  const moviesPerPage = 6;\n  let allMovies = [];\n  let filteredMovies = [];\n\n  const populateGenres = () => {\n    const defaultOption = document.createElement('option');\n    defaultOption.value = 'all';\n    defaultOption.textContent = 'Genre';\n    genreSelect.appendChild(defaultOption);\n\n    const genres = ['action', 'drama', 'comedy', 'horror', 'thriller'];\n    genres.forEach(genre => {\n      const option = document.createElement('option');\n      option.value = genre;\n      option.textContent = genre.charAt(0).toUpperCase() + genre.slice(1);\n      genreSelect.appendChild(option);\n    });\n  };\n\n  const createStarElement = type => {\n    const starElement = document.createElement('span');\n    starElement.classList.add(`${type}-star`);\n    starElement.innerHTML = type === 'empty' ? '&#9734;' : '&#9733;';\n    return starElement;\n  };\n\n  const displayStarRating = rating => {\n    const starsContainer = document.createElement('div');\n    starsContainer.classList.add('star-rating');\n    const normalizedRating = rating / 2;\n\n    const fullStars = Math.floor(normalizedRating);\n    const halfStar = normalizedRating % 1 >= 0.5 ? 1 : 0;\n    const emptyStars = 5 - fullStars - halfStar;\n\n    for (let i = 0; i < fullStars; i++) {\n      starsContainer.appendChild(createStarElement('full'));\n    }\n\n    if (halfStar) {\n      starsContainer.appendChild(createStarElement('half'));\n    }\n\n    for (let i = 0; i < emptyStars; i++) {\n      starsContainer.appendChild(createStarElement('empty'));\n    }\n\n    return starsContainer.outerHTML;\n  };\n\n  const removeMovieFromLibrary = movieId => {\n    // Usunięcie filmu z allMovies i LocalStorage\n    allMovies = allMovies.filter(movie => movie.id !== movieId);\n    localStorage.setItem('myLibrary', JSON.stringify(allMovies)); // Zaktualizowanie localStorage\n    loadMovies(); // Ponowne załadowanie filmów\n  };\n\n  const renderMovies = (movies, container) => {\n    const fragment = document.createDocumentFragment();\n\n    movies.forEach(movie => {\n      const movieElement = document.createElement('div');\n      movieElement.classList.add('film-card');\n\n      const rating = movie.vote_average;\n\n      movieElement.innerHTML = `\n                <button class=\"remove-movie\" data-id=\"${movie.id}\">x</button>\n                <img src=\"https://image.tmdb.org/t/p/w500${\n                  movie.poster_path || ''\n                }\" alt=\"${movie.title || ''} poster\" class=\"film-poster\"/>\n                <div class =\"film-card-descr\">\n                <h3 class =\"film-card-title\">${movie.title || ''}</h3>\n                <p class =\"film-card-genre\">${\n                  movie.genres.slice(0, 2).join(', ') || 'N/A'\n                }</p>\n                <p class =\"film-card-year\"> ${\n                  new Date(movie.release_date).getFullYear() || ''\n                }</p>\n                <p class =\"film-card-stars\">${\n                  displayStarRating(rating) || ''\n                }</p>\n                </div>\n            `;\n\n      const removeButton = movieElement.querySelector('.remove-movie');\n      removeButton.addEventListener('click', () =>\n        removeMovieFromLibrary(movie.id)\n      );\n\n      fragment.appendChild(movieElement);\n    });\n\n    container.append(fragment);\n  };\n\n  const fetchMoviesFromAPI = async () => {\n    try {\n      const response = await getTrending('day');\n      allMovies = await Promise.all(\n        response.results.map(async movie => {\n          const details = await getDetails(movie.id);\n          return {\n            ...movie,\n            genres: await convertGenreIdsToNames(details.genres.map(g => g.id)),\n            poster_path: details.poster_path,\n            release_date: details.release_date,\n          };\n        })\n      );\n      console.log('All movies fetched:', allMovies.length); // Logowanie liczby filmów\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  };\n\n  const loadMovies = () => {\n    catalog.innerHTML = '';\n    filteredMovies = allMovies;\n\n    if (!Array.isArray(allMovies) || allMovies.length === 0) {\n      emptyLibrarySection.style.display = 'block'; // Wyświetlenie komunikatu o pustej bibliotece\n      loadMoreBtn.style.display = 'none'; // Ukrycie przycisku \"Load More\"\n      return;\n    } else {\n      emptyLibrarySection.style.display = 'none'; // Ukrycie komunikatu, jeśli są filmy\n    }\n\n    renderMovies(filteredMovies.slice(0, moviesPerPage), catalog);\n    displayedMovies = Math.min(moviesPerPage, filteredMovies.length);\n\n    updateLoadMoreButton();\n    console.log('Displayed movies:', displayedMovies);\n    console.log('Filtered movies:', filteredMovies.length);\n  };\n\n  const updateLoadMoreButton = () => {\n    loadMoreBtn.style.display =\n      displayedMovies < filteredMovies.length ? 'block' : 'none';\n  };\n\n  loadMoreBtn.addEventListener('click', () => {\n    const moreMovies = filteredMovies.slice(\n      displayedMovies,\n      displayedMovies + moviesPerPage\n    );\n\n    renderMovies(moreMovies, catalog);\n    displayedMovies += moreMovies.length;\n\n    updateLoadMoreButton();\n    console.log('Displayed movies after loading more:', displayedMovies);\n  });\n\n  genreSelect.addEventListener('change', e => {\n    const selectedGenre = e.target.value;\n\n    filteredMovies = allMovies.filter(movie => {\n      return (\n        selectedGenre === 'all' ||\n        (Array.isArray(movie.genres) &&\n          movie.genres.map(g => g.toLowerCase()).includes(selectedGenre))\n      );\n    });\n\n    catalog.innerHTML = '';\n    renderMovies(filteredMovies.slice(0, moviesPerPage), catalog);\n    displayedMovies = Math.min(moviesPerPage, filteredMovies.length);\n\n    updateLoadMoreButton();\n    console.log('Filtered movies after genre change:', filteredMovies.length);\n  });\n\n  populateGenres();\n  await fetchMoviesFromAPI();\n  loadMovies();\n});\n"],"names":["catalog","genreSelect","loadMoreBtn","emptyLibrarySection","displayedMovies","moviesPerPage","allMovies","filteredMovies","populateGenres","defaultOption","genre","option","createStarElement","type","starElement","displayStarRating","rating","starsContainer","normalizedRating","fullStars","halfStar","emptyStars","i","removeMovieFromLibrary","movieId","movie","loadMovies","renderMovies","movies","container","fragment","movieElement","fetchMoviesFromAPI","response","getTrending","details","getDetails","convertGenreIdsToNames","g","error","updateLoadMoreButton","moreMovies","selectedGenre"],"mappings":"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"}