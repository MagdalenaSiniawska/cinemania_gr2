{"version":3,"file":"library.js","sources":["../src/js/library.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  const catalog = document.querySelector('#catalog');\n  const genreSelect = document.querySelector('#genre-select');\n  const loadMoreBtn = document.querySelector('#load-more');\n  const catFilms = document.querySelector('.catalog-films');\n\n  let displayedMovies = 0;\n  const moviesPerPage = 6;\n  let allMovies = [];\n  let filteredMovies = [];\n\n  const genres = ['action', 'adventure', 'animation', 'comedy', 'crime', 'documentary', 'drama', 'family', 'fantasy', 'horror', 'kids', 'mystery', 'news', 'politics', 'reality', 'sci-fi', 'soap', 'talk', 'thriller', 'war', 'western'];\n\n  const populateGenres = () => {\n    const defaultOption = document.createElement('option');\n    defaultOption.value = 'all';\n    defaultOption.textContent = 'Genre';\n    genreSelect.appendChild(defaultOption);\n\n    genres.forEach(genre => {\n      const option = document.createElement('option');\n      option.value = genre;\n      option.textContent = genre.charAt(0).toUpperCase() + genre.slice(1);\n      genreSelect.appendChild(option);\n    });\n  };\n\n  const createStarElement = type => {\n    const starElement = document.createElement('span');\n    starElement.classList.add(`${type}-star`);\n    starElement.innerHTML = type === 'empty' ? '&#9734;' : '&#9733;';\n    return starElement;\n  };\n\n  const displayStarRating = rating => {\n    const starsContainer = document.createElement('div');\n    starsContainer.classList.add('star-rating');\n    const normalizedRating = rating / 2;\n\n    const fullStars = Math.floor(normalizedRating);\n    const halfStar = normalizedRating % 1 >= 0.5 ? 1 : 0;\n    const emptyStars = 5 - fullStars - halfStar;\n\n    for (let i = 0; i < fullStars; i++) {\n      starsContainer.appendChild(createStarElement('full'));\n    }\n\n    if (halfStar) {\n      starsContainer.appendChild(createStarElement('half'));\n    }\n\n    for (let i = 0; i < emptyStars; i++) {\n      starsContainer.appendChild(createStarElement('empty'));\n    }\n\n    return starsContainer.outerHTML;\n  };\n\n  const renderMovies = (movies, container) => {\n    const fragment = document.createDocumentFragment();\n\n    movies.forEach(movie => {\n      const movieElement = document.createElement('div');\n      movieElement.classList.add('film-card');\n      const rating = movie.vote_average;\n\n      const posterUrl = movie.poster ? `https://image.tmdb.org/t/p/w500${movie.poster}` : 'default-image-url.jpg';\n\n      movieElement.innerHTML = `\n                <button class=\"remove-movie\" aria-label=\"Remove movie\" data-title=\"${movie.title}\">&times;</button>\n                <img src=\"${posterUrl}\" alt=\"${movie.title || ''} poster\" class=\"film-poster\"/>\n                <div class =\"film-card-descr\">\n                  <h3 class =\"film-card-title\">${movie.title || ''}</h3>\n                  <p class =\"film-card-genre\">${movie.genres?.slice(0, 2).join(', ') || 'N/A'}</p>\n                  <p class =\"film-card-year\">${movie.year || ''}</p>\n                  <p class =\"film-card-stars\">${displayStarRating(rating) || ''}</p>\n                </div>\n            `;\n\n      const removeButton = movieElement.querySelector('.remove-movie');\n\n      // Dodanie funkcji usuwania filmu\n      removeButton.addEventListener('click', () => {\n        const movieTitle = movie.title; // Pobieramy tytuł filmu z obiektu \"movie\"\n\n        let myLibrary = JSON.parse(localStorage.getItem('myLibrary')) || [];\n\n        // Sprawdzamy, czy mamy w bibliotece film o tym tytule\n        const updatedLibrary = myLibrary.filter(m => m.title !== movieTitle);\n\n        // Aktualizacja localStorage po usunięciu filmu\n        localStorage.setItem('myLibrary', JSON.stringify(updatedLibrary));\n\n        // Odświeżenie wyświetlania filmów po usunięciu\n        loadMovies();\n      });\n\n      fragment.appendChild(movieElement);\n    });\n\n    container.append(fragment);\n  };\n\n  const fetchMoviesFromLibrary = () => {\n    const myLibrary = JSON.parse(localStorage.getItem('myLibrary')) || [];\n    return Array.isArray(myLibrary) ? myLibrary : [];\n  };\n\n  const loadMovies = () => {\n    allMovies = fetchMoviesFromLibrary();\n    catFilms.innerHTML = '';\n    filteredMovies = allMovies;\n\n    if (!Array.isArray(allMovies) || allMovies.length === 0) {\n      console.warn('No movies found in library or library is not an array.');\n      document.querySelector('#empty-library').style.display = '';\n      loadMoreBtn.style.display = 'none';\n      return;\n    }\n\n    renderMovies(filteredMovies.slice(0, moviesPerPage), catFilms);\n    displayedMovies = Math.min(moviesPerPage, filteredMovies.length);\n\n    loadMoreBtn.style.display =\n      displayedMovies >= filteredMovies.length ? 'none' : 'block';\n  };\n\n  loadMoreBtn.addEventListener('click', () => {\n    const moreMovies = filteredMovies.slice(\n      displayedMovies,\n      displayedMovies + moviesPerPage\n    );\n    renderMovies(moreMovies, catFilms);\n    displayedMovies += moreMovies.length;\n\n    loadMoreBtn.style.display =\n      displayedMovies >= filteredMovies.length ? 'none' : 'block';\n  });\n\n  genreSelect.addEventListener('change', e => {\n    const selectedGenre = e.target.value;\n\n    filteredMovies = allMovies.filter(movie => {\n      return (\n        selectedGenre === 'all' ||\n        (movie.genres && movie.genres.map(g => g.toLowerCase()).includes(selectedGenre))\n      );\n    });\n\n    catFilms.innerHTML = '';\n    renderMovies(filteredMovies.slice(0, moviesPerPage), catFilms);\n    displayedMovies = Math.min(moviesPerPage, filteredMovies.length);\n\n    loadMoreBtn.style.display =\n      displayedMovies >= filteredMovies.length ? 'none' : 'block';\n  });\n\n  const searchMovieBtn = document.querySelector('.lib-empty-library-btn');\n  searchMovieBtn.addEventListener('click', () => {\n    window.location.href = 'catalog.html';\n  });\n\n  populateGenres();\n  loadMovies();\n});\n"],"names":["genreSelect","loadMoreBtn","catFilms","displayedMovies","moviesPerPage","allMovies","filteredMovies","genres","populateGenres","defaultOption","genre","option","createStarElement","type","starElement","displayStarRating","rating","starsContainer","normalizedRating","fullStars","halfStar","emptyStars","i","renderMovies","movies","container","fragment","movie","movieElement","posterUrl","_a","movieTitle","updatedLibrary","m","loadMovies","fetchMoviesFromLibrary","myLibrary","moreMovies","selectedGenre","g"],"mappings":"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"}