{"version":3,"file":"library.js","sources":["../src/js/library.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  const catalog = document.querySelector('#catalog');\n  const genreSelect = document.querySelector('#genre-select');\n  const loadMoreBtn = document.querySelector('#load-more');\n\n  let displayedMovies = 0;\n  const moviesPerPage = 6;\n  let allMovies = [];\n  let filteredMovies = []; // Zmienna do przechowywania przefiltrowanych filmów\n\n  // Lista gatunków (w małych literach)\n  const genres = ['action', 'drama', 'comedy', 'horror', 'thriller'];\n\n  const populateGenres = () => {\n    const defaultOption = document.createElement('option');\n    defaultOption.value = 'all';\n    defaultOption.textContent = 'Genre';\n    genreSelect.appendChild(defaultOption);\n\n    genres.forEach(genre => {\n      const option = document.createElement('option');\n      option.value = genre;\n      option.textContent = genre.charAt(0).toUpperCase() + genre.slice(1);\n    \n      genreSelect.appendChild(option);\n    });\n   \n  };\n\n  const createStarElement = type => {\n    const starElement = document.createElement('span');\n    starElement.classList.add(`${type}-star`);\n    starElement.innerHTML = type === 'empty' ? '&#9734;' : '&#9733;';\n    return starElement;\n  };\n\n  const displayStarRating = rating => {\n    const starsContainer = document.createElement('div');\n    starsContainer.classList.add('star-rating');\n    const normalizedRating = rating / 2;\n\n    const fullStars = Math.floor(normalizedRating);\n    const halfStar = normalizedRating % 1 >= 0.5 ? 1 : 0;\n    const emptyStars = 5 - fullStars - halfStar;\n\n    for (let i = 0; i < fullStars; i++) {\n      starsContainer.appendChild(createStarElement('full'));\n    }\n\n    if (halfStar) {\n      starsContainer.appendChild(createStarElement('half'));\n    }\n\n    for (let i = 0; i < emptyStars; i++) {\n      starsContainer.appendChild(createStarElement('empty'));\n    }\n\n    return starsContainer.outerHTML;\n  };\n\n  const renderMovies = (movies, container) => {\n    const fragment = document.createDocumentFragment();\n\n    movies.forEach(movie => {\n      const movieElement = document.createElement('div');\n      movieElement.classList.add('film-card');\n\n      const rating = movie.vote_average;\n\n      movieElement.innerHTML = `\n                <img src=\"${movie.poster || ''}\" alt=\"${\n        movie.title || ''\n      } poster\" class=\"film-poster\"/>\n                <h3>${movie.title || ''}</h3>\n                <p>Genre: ${\n                  Array.isArray(movie.genres) && movie.genres.length > 0\n                    ? movie.genres.join(', ')\n                    : 'N/A'\n                }</p>\n                <p>Year: ${movie.year || ''}</p>\n                <p>${displayStarRating(rating) || ''}</p>\n            `;\n      fragment.appendChild(movieElement);\n    });\n\n    container.append(fragment);\n  };\n\n  const fetchMoviesFromLibrary = () => {\n    const myLibrary = JSON.parse(localStorage.getItem('myLibrary')) || [];\n    return Array.isArray(myLibrary) ? myLibrary : [];\n  };\n\n  const loadMovies = () => {\n    allMovies = fetchMoviesFromLibrary();\n    // catalog.innerHTML = '';\n    filteredMovies = allMovies; // Na początku wyświetlamy wszystkie filmy\n\n    if (!Array.isArray(allMovies) || allMovies.length === 0) {\n      console.warn('No movies found in library or library is not an array.');\n      return;\n    }\n\n    renderMovies(filteredMovies.slice(0, moviesPerPage), catalog);\n    displayedMovies = Math.min(moviesPerPage, filteredMovies.length);\n\n    loadMoreBtn.style.display =\n      displayedMovies >= filteredMovies.length ? 'none' : 'block';\n  };\n\n  loadMoreBtn.addEventListener('click', () => {\n    const moreMovies = filteredMovies.slice(\n      displayedMovies,\n      displayedMovies + moviesPerPage\n    );\n    renderMovies(moreMovies, catalog);\n    displayedMovies += moreMovies.length;\n\n    loadMoreBtn.style.display =\n      displayedMovies >= filteredMovies.length ? 'none' : 'block';\n  });\n\n  // Filtrowanie po kategorii wśród zapisanych filmów\n  genreSelect.addEventListener('change', e => {\n    const selectedGenre = e.target.value;\n\n    // Filtrowanie filmów\n    filteredMovies = allMovies.filter(movie => {\n      return (\n        selectedGenre === 'all' ||\n        movie.genres.map(g => g.toLowerCase()).includes(selectedGenre)\n      );\n    });\n\n    // catalog.innerHTML = '';\n    renderMovies(filteredMovies.slice(0, moviesPerPage), catalog);\n    displayedMovies = Math.min(moviesPerPage, filteredMovies.length);\n\n    loadMoreBtn.style.display =\n      displayedMovies >= filteredMovies.length ? 'none' : 'block';\n  });\n\n  // Ładowanie zapisanych filmów po załadowaniu strony\n  populateGenres(); // Dodaj gatunki do selecta\n  loadMovies();\n});\n"],"names":["catalog","genreSelect","loadMoreBtn","displayedMovies","moviesPerPage","allMovies","filteredMovies","genres","populateGenres","defaultOption","genre","option","createStarElement","type","starElement","displayStarRating","rating","starsContainer","normalizedRating","fullStars","halfStar","emptyStars","renderMovies","movies","container","fragment","movie","movieElement","fetchMoviesFromLibrary","myLibrary","loadMovies","moreMovies","selectedGenre","g"],"mappings":"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"}