{"version":3,"file":"catalog.js","sources":["../src/partials/API.js","../src/partials/card_creator.js","../src/partials/catalog.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2Y2IxMWQ4ZGE0NTZlOGI5OTIxM2EyNDk4ODM4OGQyNSIsIm5iZiI6MTcyODcyMDEzMC44MDY0Niwic3ViIjoiNjcwYTJiNDEzYmI0NTU3YzY2OWFmYzM5Iiwic2NvcGVzIjpbImFwaV9yZWFkIl0sInZlcnNpb24iOjF9.Pgojbxf9JKo_J1qf6Qmglon5qZgkr9wpZ4I978dGQU8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = API_KEY;\n\n//pozyskanie wszystkich filmów - do wykorzystania przy populowania katalogu\n//time_window to string \"day\" albo \"week\"\nexport const getTrending = async (time_window = 'day') => {\n  const response = await axios.get(`/trending/movie/${time_window}`);\n  return response.data;\n};\n\n//pozyskiwanie nadchodzących\nexport const getUpcoming = async () => {\n  const response = await axios.get(`movie/upcoming`);\n  return response.data;\n};\n\n//wyszukiwanie filmów\n\n//przykładowe searchParams, do zmiany na input value jak już będzie przygotowana strona;\nconst searchParams = new URLSearchParams({\n  query: 'Deadpool',\n  primary_release_year: 2024,\n  page: 1,\n});\n\nexport const searchFilm = async () => {\n  const response = await axios.get(`/search/movie?${searchParams}`);\n  return response.data;\n};\n\n//pozyskiwanie szczegółów\nexport const getDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}`);\n  return response.data;\n};\n\n//trailer\nexport const getTrailer = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/videos`);\n  return response.data;\n};\n\n//gatunki\nconst getGenres = async () => {\n  try {\n    const response = await axios.get(`/genre/movie/list`);\n    const genres = response.data.genres;\n    return new Map(genres.map(genre => [genre.id, genre.name]));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const convertGenreIdsToNames = async genreIds => {\n  try {\n    const genreMap = await getGenres();\n    const genreNames = genreIds.map(id => genreMap.get(id) || 'Unknow genre');\n    return genreNames;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//kraje\nexport const getCountries = async () => {\n  const response = await axios.get(`/configuration/countries`);\n  return response.data;\n};\n\n//logowanie danych do konsoli\nexport const logData = async fn => {\n  try {\n    const data = await fn;\n    console.log(data);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import { convertGenreIdsToNames } from './API.js';\n\nconst element = (tag, props) =>\n  Object.assign(document.createElement(tag), props);\n\nexport const createElement = ({\n  poster_path,\n  title,\n  genre_ids,\n  release_date,\n}) => {\n  const card = element('li', { className: 'card' });\n\n  const poster = element('img', {\n    className: 'card-poster',\n    src: `https://image.tmdb.org/t/p/original/${poster_path}`,\n    width: 200,\n    height: 300,\n  });\n\n  const description = element('div', {\n    className: 'card-description',\n  });\n\n  const filmTitle = element('p', {\n    className: 'card-title',\n    textContent: title,\n  });\n\n  const genres = element('p', {\n    className: 'card-description-element',\n  });\n  convertGenreIdsToNames(genre_ids).then(genreNames => {\n    genres.textContent = `${genreNames.join(', ')} |`;\n  });\n\n  const year = element('p', {\n    className: 'card-description-element',\n    textContent: release_date.slice(0, 4),\n  });\n\n  description.append(genres, year);\n  card.append(poster, filmTitle, description);\n  return card;\n};\n","import {\n  getTrending,\n  getUpcoming,\n  searchFilm,\n  getDetails,\n  logData,\n  getTrailer,\n  getCountries,\n} from './API.js';\n\nimport { createElement } from './card_creator.js';\n\nconst form = document.querySelector('#searchForm');\nconst catalog = document.querySelector('#catalog');\n\nconst renderElements = (films, rootList) => {\n  const fragment = document.createDocumentFragment();\n  fragment.append(...films.map(createElement));\n\n  rootList.append(fragment);\n};\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n});\n\n(async () => {\n  try {\n    const response = await getTrending('day');\n    console.log(response.results);\n    renderElements(response.results, catalog);\n  } catch (error) {\n    console.log(error);\n  }\n})();\n"],"names":["API_KEY","axios","getTrending","time_window","getGenres","genres","genre","error","convertGenreIdsToNames","genreIds","genreMap","id","element","tag","props","createElement","poster_path","title","genre_ids","release_date","card","poster","description","filmTitle","genreNames","year","form","catalog","renderElements","films","rootList","fragment","response"],"mappings":"+FAEA,MAAMA,EACJ,2PACFC,EAAM,SAAS,QAAU,+BACzBA,EAAM,SAAS,QAAQ,OAAO,cAAmBD,EAI1C,MAAME,EAAc,MAAOC,EAAc,SAC7B,MAAMF,EAAM,IAAI,mBAAmBE,CAAW,EAAE,GACjD,KAYG,IAAI,gBAAgB,CACvC,MAAO,WACP,qBAAsB,KACtB,KAAM,CACR,CAAC,EAoBD,MAAMC,EAAY,SAAY,CAC5B,GAAI,CAEF,MAAMC,GADW,MAAMJ,EAAM,IAAI,mBAAmB,GAC5B,KAAK,OAC7B,OAAO,IAAI,IAAII,EAAO,IAAIC,GAAS,CAACA,EAAM,GAAIA,EAAM,IAAI,CAAC,CAAC,CAC3D,OAAQC,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACH,EACaC,EAAyB,MAAMC,GAAY,CACtD,GAAI,CACF,MAAMC,EAAW,MAAMN,IAEvB,OADmBK,EAAS,IAAIE,GAAMD,EAAS,IAAIC,CAAE,GAAK,cAAc,CAEzE,OAAQJ,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACH,EC9DMK,EAAU,CAACC,EAAKC,IACpB,OAAO,OAAO,SAAS,cAAcD,CAAG,EAAGC,CAAK,EAErCC,EAAgB,CAAC,CAC5B,YAAAC,EACA,MAAAC,EACA,UAAAC,EACA,aAAAC,CACF,IAAM,CACJ,MAAMC,EAAOR,EAAQ,KAAM,CAAE,UAAW,MAAM,CAAE,EAE1CS,EAAST,EAAQ,MAAO,CAC5B,UAAW,cACX,IAAK,uCAAuCI,CAAW,GACvD,MAAO,IACP,OAAQ,GACZ,CAAG,EAEKM,EAAcV,EAAQ,MAAO,CACjC,UAAW,kBACf,CAAG,EAEKW,EAAYX,EAAQ,IAAK,CAC7B,UAAW,aACX,YAAaK,CACjB,CAAG,EAEKZ,EAASO,EAAQ,IAAK,CAC1B,UAAW,0BACf,CAAG,EACDJ,EAAuBU,CAAS,EAAE,KAAKM,GAAc,CACnDnB,EAAO,YAAc,GAAGmB,EAAW,KAAK,IAAI,CAAC,IACjD,CAAG,EAED,MAAMC,EAAOb,EAAQ,IAAK,CACxB,UAAW,2BACX,YAAaO,EAAa,MAAM,EAAG,CAAC,CACxC,CAAG,EAED,OAAAG,EAAY,OAAOjB,EAAQoB,CAAI,EAC/BL,EAAK,OAAOC,EAAQE,EAAWD,CAAW,EACnCF,CACT,EChCMM,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAU,SAAS,cAAc,UAAU,EAE3CC,EAAiB,CAACC,EAAOC,IAAa,CAC1C,MAAMC,EAAW,SAAS,yBAC1BA,EAAS,OAAO,GAAGF,EAAM,IAAId,CAAa,CAAC,EAE3Ce,EAAS,OAAOC,CAAQ,CAC1B,EAEAL,EAAK,iBAAiB,SAAU,GAAK,CACnC,EAAE,eAAc,CAClB,CAAC,GAEA,SAAY,CACX,GAAI,CACF,MAAMM,EAAW,MAAM9B,EAAY,KAAK,EACxC,QAAQ,IAAI8B,EAAS,OAAO,EAC5BJ,EAAeI,EAAS,QAASL,CAAO,CACzC,OAAQpB,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACH,GAAI"}